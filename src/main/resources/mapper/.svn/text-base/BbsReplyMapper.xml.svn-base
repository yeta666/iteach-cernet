<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bbsReply">
	<resultMap type="CourseStatisticModel" id="courseBbsReplyStatistic">
		<id column="cour_id" property="courseId" jdbcType="INTEGER" />
		<result column="num" property="replyNum" jdbcType="INTEGER" />
	</resultMap>

	<resultMap type="PlatformStatisticModel" id="schoolBbsReplyStatistic">
		<id column="depa_id" property="schoolId" jdbcType="INTEGER" />
		<result column="num" property="replyNum" jdbcType="INTEGER" />
	</resultMap>

	<!-- 按照课程来回帖数，若指定了学生id， 则统计相应学生的相关课程的回帖数. 传入参数为一个map（默认就为map，所以不指定参数）， 其中包含了所有的课程 -->
	<select id="staReplyNumByCourse" resultMap="courseBbsReplyStatistic">
		<![CDATA[
		select 
			cour_id,
			count(*) as num
		from
			Course 
			inner join BbsPost on cour_id=bbpo_cour_id
			inner join BbsReply on bbpo_id=bbre_bbpo_id		
		]]>
		<where>
			<if test="stuId != null">
				<![CDATA[bbre_user_id=#{stuId}]]>
			</if>
			<if test="courses!=null and courses.size()!=0">
				and cour_id in
				<foreach collection="courses" item="course" index="index"
					open="(" close=")" separator=",">
                    	<![CDATA[#{course.courId}]]>
				</foreach>
			</if>
		</where>
		group by cour_id
		order by cour_id
	</select>

	<!-- 按照学校，统计回帖数。 无需传入参数 -->
	<select id="staReplyBySchool" resultMap="schoolBbsReplyStatistic">
		<![CDATA[
		select 
			depa_id,
			count(*) as num
		from
			Department 
			inner join User on depa_id=user_depa_id				
			inner join BbsReply on user_id=bbre_user_id
		where depa_type=3 	
		group by depa_id	
		]]>
	</select>

	<!-- 查询指定教师对指定课程的回帖数 @author 吴岘辉 -->
	<select id="staTeacherReply" parameterType="map" resultType="int">
		select
		count(*) as replyNum
		from
		BbsReply
		inner join BbsPost on bbpo_id=bbre_bbpo_id
		<where>
			1=1
			<if test="courId!=null and courId>0">
				and bbpo_cour_id=#{courId}
			</if>
			<if test="teaId!=null and teaId>0">
				and bbre_user_id=#{teaId}
			</if>
		</where>
	</select>

	<!-- 统计总的回帖数 -->
	<select id="staTotalReplyNum" resultType="int">
		select
		count(*)
		from
		BbsReply
	</select>

	<!-- 查询一个主贴对应的回帖总数 -->
	<select id="countReplyNumByPost" parameterType="int" resultType="int">
		select
		count(*)
		from
		BbsReply
		where
		bbre_bbpo_id=#{_parameter}
	</select>

	<!-- 查询一个主贴对应的回帖列表 -->
	<select id="viewReplyList" resultType="BBSReplyModel">
		select
		bbre_id as replyId,
		bbre_user_id as userId,
		user_realname as replyUserName,
		bbre_content as replyContent,
		bbre_time as replyTime,
		bbre_hasattach as hasAttach
		from
		BbsReply
		inner join User on user_id=bbre_user_id
		where
		bbre_bbpo_id=#{bbsPostId}
		order by bbre_time asc
		<if test="maxCount!=null">
			limit
			<if test="startIndex!=null">
				#{startIndex},
			</if>
			#{maxCount}
		</if>
	</select>

	<!-- 新增一条回帖 -->
	<insert id="createBbsReply" parameterType="BbsReply"
		useGeneratedKeys="true" keyProperty="bbreId">
		insert into
		BbsReply
		(bbre_id,bbre_bbpo_id,bbre_user_id,bbre_content,
		bbre_hasattach)
		values
		(#{bbreId},#{bbreBbpoId},#{bbreUserId},#{bbreContent},
		#{bbreHasattach})
	</insert>

	<!-- 删除某个主贴的所有的回复 -->
	<delete id="deleteReplyOfPost" parameterType="int">
		delete from
		BbsReply
		where
		bbre_bbpo_id=#{bbsPostId}
	</delete>

	<!-- 获取指定用户最近的回复（时间） -->
	<select id="viewlastReply" parameterType="int" resultType="BbsReply">
		select
		bbre_id as bbreId,
		bbre_time as bbreTime
		from
		BbsReply
		where
		bbre_user_id=#{_parameter}
		order by
		bbre_time desc
		limit 1
	</select>

	<!-- 获取指定id的回帖 -->
	<select id="viewOneReply" parameterType="int" resultType="BbsReply">
		select
		bbre_id as bbreId,
		bbre_bbpo_id as bbreBbpoId,
		bbre_user_id as bbreUserId,
		bbre_content as bbreContent,
		bbre_time as bbreTime,
		bbre_hasattach as bbreHasattach
		from
		BbsReply
		where
		bbre_id=#{_parameter}
	</select>

	<!-- 删除指定id的回帖 -->
	<delete id="deleteReplyById" parameterType="int">
		delete from
		BbsReply
		where
		bbre_id=#{_parameter}
	</delete>

	<!-- 统计课程的回贴数 -->
	<select id="staCourseBbsReplyState" parameterType="list"
		resultType="CourseLearnModel">
		select
		bbpo_cour_id as courseId,
		count(*) as bbsReplyNum
		from
		BbsReply
		inner join BbsPost on bbpo_id=bbre_bbpo_id
		<if test="list!=null and list.size()>0">
			where
			bbpo_cour_id in
			<foreach collection="list" item="courId" index="index" open="("
				close=")" separator=",">
				#{courId}
			</foreach>
		</if>
		GROUP BY bbpo_cour_id
	</select>

	<!-- 根据查询，统计课程的回贴数 by libo -->
	<select id="staCourseBbsReplyStateByQuery" resultType="CourseLearnModel">
		select
		bbpo_cour_id as courseId,
		count(*) as bbsReplyNum
		from
		BbsReply
		inner join BbsPost on bbpo_id=bbre_bbpo_id
		inner join User on
		user_id=bbre_user_id
		<where>
			user_type=1
			<if test="departId!=null and departId>0">
				and user_depa_id=#{departId}
			</if>
			<if test="courseIds!=null and courseIds.size()>0">
				and bbpo_cour_id in
				<foreach collection="courseIds" item="courseId" index="index"
					open="(" close=")" separator=",">
					#{courseId}
				</foreach>
			</if>
		</where>
		GROUP BY bbpo_cour_id
	</select>
</mapper>