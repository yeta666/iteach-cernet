<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="learnProcessRecord">
	<resultMap type="CourseStatisticModel"
		id="courseLearningStatistic">
		<id column="cour_id" property="courseId" jdbcType="INTEGER" />
		<result column="num" property="totalLearningNum" jdbcType="INTEGER" />
		<result column="time" property="totalLearningTime" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap type="PlatformStatisticModel" id="schoolLearningStatis">
		<id column="depa_id" property="schoolId" jdbcType="INTEGER" />
		<result column="num" property="totalLearningNum" jdbcType="INTEGER" />
		<result column="time" property="totalLearningTime" jdbcType="INTEGER" />
	</resultMap>
	
	<!--
		通过userid chapid resoid，查看用户是否看过这个章节的这个视频
		@author easonlian 
	 -->
	<select id="isUserViewThisChapterVideoReso" parameterType="hashmap" resultType="integer">
		SELECT 
			count(*) 
		FROM
			LearnProcessRecord as lpre
		WHERE
			lpre.lpre_user_id = #{userId}
		AND
			lpre.lpre_chap_id = #{chapId}
		AND	
			lpre.lpre_reso_id = #{resoId}
	</select>
	
	<!--
		通过chapid userid resoid查询记录的条数
		@author easonlian 
	 -->
	<select id="getLearnProcessCountByResoId" parameterType="hashmap" resultType="integer">
		SELECT
			count(*)
		FROM
			LearnProcessRecord
		WHERE	
			lpre_chap_id = #{chapId}
			AND lpre_user_id = #{userId}
			AND lpre_reso_id = #{resoId}
	</select>
	
	<!--
		删除章节和章节学习记录关系
		@author EasonLian 
	 -->
	<delete id="delLearningProcessRecordByChapId" parameterType="hashmap">
		DELETE
			FROM LearnProcessRecord
		WHERE
			lpre_chap_id in (${ids})
	</delete>
	
	<!--
		更新学生学习记录
		@author EasonLian
		@type update 
	 -->
	 <update id="updateOneLearnProcessRecord" parameterType="INTEGER">
	 	UPDATE
	 		LearnProcessRecord
	 	SET
	 		lpre_learntime = lpre_learntime+#{studyTime},
	 		lpre_endtime = #{endtime}
	 	WHERE
	 		lpre_id = #{lpreId}
	 </update>
	 
	 <!--
	 	查询最近一条学习记录的id
	 	@author EasonLian
	 	@type select 
	  -->
	 <select id="selectOneByUserIdAndChapId" 
	 		 parameterType="hashmap" 
	 		 resultType="com.swust.kelab.domain.LearnProcessRecord">
	 	SELECT 
	 		lpre_id as lpreid,
	 		lpre_user_id as lpreUserId,
	 		lpre_chap_id as lpreChapId,
	 		lpre_content as lpreContent,
	 		lpre_begintime as lpreBegintime,
	 		lpre_endtime as lpreEndtime,
	 		lpre_learntime as lpreLearntime
	 	FROM
	 		LearnProcessRecord as lpr
	 	WHERE
	 		lpr.lpre_user_id = #{userId}
	 		AND 	
	 			lpr.lpre_chap_id = #{chapId}
	 	ORDER BY 
	 		lpr.lpre_id
	 	DESC
	 </select>
	
	<!--
		插入学生学习记录
		@author EasonLian
		@Type insert 
	 -->
	 <insert 
	 		id="insertOneLearnProcessRecord" 
	 		parameterType="com.swust.kelab.domain.LearnProcessRecord" 
	 		keyProperty="lpreId">
	 	INSERT INTO
	 		LearnProcessRecord (
	 			lpre_user_id,
	 			lpre_chap_id,
	 			lpre_content,
	 			lpre_reso_id,
	 			lpre_learntime
	 		)
	 	VALUES (
	 		#{lpreUserId},
	 		#{lpreChapId},
	 		#{lpreContent},
	 		#{lpreResoId},
	 		#{lpreLearntime}
	 	)
	 </insert>
	
	<!-- 按照课程来统计学习记录，若指定了学生id，
			则统计相应学生的相关课程的学习记录.
			传入参数为一个map（默认就为map，所以不指定参数），
			其中包含了所有的课程 -->
	<select id="staByCourse" resultMap="courseLearningStatistic">
		<![CDATA[
		select 
			cour_id,			
			count(*) as num,
			sum(lpre_learntime) as time
		from
			Course inner join (Chapter,LearnProcessRecord)
			on (cour_id=chap_cour_id and chap_id=lpre_chap_id)
		]]>
		<where>
			<if test="stuId != null">
				<![CDATA[lpre_user_id=#{stuId}]]>
			</if> 			
			<if test="courses!=null and courses.size()!=0">
				and cour_id in
				<foreach collection="courses" item="course" index="index"
					open="(" close=")" separator=",">
                    	<![CDATA[#{course.courId}]]>
				</foreach>
			</if>
		</where>
		group by cour_id
		order by cour_id
	</select>
	
	<!-- 按照学校，统计课程学习记录。
			无需传入参数 -->
	<select id="staBySchool" resultMap="schoolLearningStatis">
		<![CDATA[
		select 
			depa_id,						
			count(*) as num,
			sum(lpre_learntime) as time
		from
			Department 
			inner join User on depa_id=user_depa_id 
			inner join LearnProcessRecord on user_id=lpre_user_id			
		where
			depa_type=3
		group by depa_id					
		]]>
	</select>
	
	<!-- 统计总学习次数和学习时间 -->
	<select id="staTotalLearningRecord" resultType="PlatformStatisticModel">
		select 
			count(*) as totalLearningNum,
			sum(lpre_learntime) as totalLearningTime
		from 
			LearnProcessRecord
	</select>
	
</mapper>