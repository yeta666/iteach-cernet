<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chapter">

	<resultMap type="com.swust.kelab.model.ChapterModel" id="allChapterAndResource">
		<id column="chapId" javaType="integer" property="chapId"/>
		<result column="chapName" javaType="string" property="chapName"/>
		<result column="chapOrdinal" javaType="string" property="chapOrdinal"/>
		<collection property="resources" ofType="com.swust.kelab.domain.Resource">
			<id column="rcreResoId" property="resoId" javaType="integer"/>
			<result column="resoType" property="resoType" javaType="integer"/>
			<result column="resoVedioTime" property="resoVediotime" javaType="integer"/>
			<result column="resoTitle" property="resoTitle" javaType="string"/>
			<result column="resoDescribe" property="resoDescribe" javaType="string"/>
		</collection>
	</resultMap>
	
	<resultMap type="com.swust.kelab.model.ChapterModel" id="viewAllChapList">
		<id column="chapId" javaType="integer" property="chapId"/>
		<result column="courName" javaType="string" property="courName"/>
		<result column="courId" javaType="integer" property="courId"/>
		<result column="chapName" javaType="string" property="chapName"/>
		<result column="chapOrdinal" javaType="string" property="chapOrdinal"/>
		<result column="chapDescribe" javaType="string" property="chapDescribe"/>
		<collection property="resources" ofType="com.swust.kelab.domain.Resource">
			<id column="resoId" property="resoId" javaType="integer"/>
			<result column="resoTitle" javaType="string" property="resoTitle"/>
			<result column="resoType" property="resoType" javaType="integer"/>
		</collection>
	</resultMap>
	
	<insert id="addChapterByAdmin" parameterType="com.swust.kelab.domain.Chapter" keyProperty="chapId">
		INSERT INTO 
			Chapter (
					chap_cour_id,
					chap_name
					<if test="chapDescribe != null">
						,chap_describe
					</if>
					<if test="chapOrdinal != null">
						,chap_ordinal
					</if>
					)
			VALUES (
				#{chapCourId,jdbcType=INTEGER},
				#{chapName,jdbcType=VARCHAR}
				<if test="chapDescribe != null">
					,#{chapDescribe}
				</if>
				<if test="chapOrdinal != null">
					,#{chapOrdinal}
				</if>
			);
	</insert>
	
	<select id="findOneChapter" 
			parameterType="integer" 
			resultType="com.swust.kelab.domain.Chapter">
		SELECT
			chap_id as chapId,
			chap_cour_id as chapCourId,
			chap_name as chapName,
			chap_describe as chapDescribe,
			chap_ordinal as chapOrdinal
		FROM
			Chapter as chap
		WHERE	
			chap_id = #{chapId}
	</select>
	
	<update id="updateChapterByAdmin" parameterType="hashmap">
		UPDATE
			Chapter
		SET
			chap_cour_id = #{courId}
			,chap_name = #{chapName}
			<if test="chapDescribe != null">
				,chap_Describe = #{chapDescribe}
			</if>
			<if test="chapOrdinal != null">
				,chap_ordinal = #{chapOrdinal}
			</if>
		WHERE
			chap_id = #{chapId}
	</update>
	
	<!--
		删除章节以及关联的中间表内容
		@author EAsonLian 
	 -->
	<delete id="delChapterByAdmin" parameterType="hashmap">
		DELETE
		FROM Chapter
		WHERE
			chap_id in (${ids})
	</delete>
	
	<!--
		查询章节和包含的所有资源<br>
		@author EasonLian
	 -->
	<select id="viewAllChapterList"
			parameterType="hashmap" 
			resultMap="viewAllChapList">
		SELECT
			chap.chap_id as chapId,
			cour.cour_name as courName,
			cour.cour_id as courId,
			chap.chap_name as chapName,
			chap.chap_ordinal as chapOrdinal,
			chap.chap_describe as chapDescribe,
			reso.reso_title as resoTitle,
			reso.reso_id as resoId,
			reso.reso_type as resoType
		FROM
			Chapter as chap 
		LEFT JOIN
			Course as cour
		ON
			cour.cour_id = chap.chap_cour_id
		LEFT JOIN
			Re_ChapterResource AS rcre
		ON
			rcre.rcre_chap_id = chap.chap_id
		LEFT JOIN
			Resource as reso
		ON
			reso.reso_id = rcre.rcre_reso_id
		WHERE
			1 = 1 
		<if test="courId != null">
			AND cour.cour_id = #{courId,jdbcType=INTEGER}
		</if>
		<if test="chapName != null">
			AND	chap.chap_name LIKE '%${chapName}%'
		</if>
		<if test="userType == 2">
			AND cour.cour_teacher_ids LIKE '%${userId}%'
		</if>
		<!-- <if test="myCourIds != null">
			AND cour.cour_id in (
				${myCourIds}
			)
		</if> -->
		AND cour.cour_verify = 1
		ORDER BY
			chap.chap_id
		DESC
	</select>

	<!--
		通过chapId查找courId
		@Author EasonLian 
	 -->
	<select id="selectCourIdByChapId" parameterType="integer" resultType="integer">
	 	SELECT
	 		chap.chap_cour_id as courId
	 	FROM
	 		Chapter as chap
	 	WHERE
	 		chap.chap_id = #{chpaId}
	</select>
	
	<!-- 
		通过courId查询所有章节，以及所有章节资源<br>
		@author EasonLian
	 -->
	<select id="viewChapterListByCourse" parameterType="INTEGER" 
			resultMap="allChapterAndResource">
		SELECT
			chap.chap_id as chapId,
			chap.chap_name as chapName,
			chap.chap_ordinal as chapOrdinal,
			rcre.rcre_reso_id as rcreResoId,
			reso.reso_type as resoType,
			reso.reso_vedioTime as resoVedioTime,
			reso.reso_describe as resoDescribe,
			reso.reso_title as resoTitle
		FROM
			Chapter as chap
		LEFT JOIN
			Re_ChapterResource as rcre
		ON
			rcre.rcre_chap_id = chap.chap_id
		LEFT JOIN
			Resource as reso
		ON
			rcre_reso_id = reso.reso_id
		WHERE
			chap.chap_cour_id = #{courId}
		<!-- AND
			reso.reso_type = 3 -->
		AND 
			(
				reso.reso_status = 1
				OR reso.reso_status is null
			)
		ORDER BY
			chap.chap_ordinal
	</select>
	
	<update id="assessChapter" parameterType="map">
		update 
			Chapter
		set
			chap_assess_score=(chap_assess_score*chap_assess_num+#{score})/(chap_assess_num+1),
			chap_assess_num=chap_assess_num+1
		where 
			chap_id=#{chapterId}
	</update>
</mapper>